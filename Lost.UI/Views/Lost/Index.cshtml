@model PagedList.IPagedList<Lost.DAL.LostPersonEntity>
@using PagedList.Mvc
<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />

@{
    ViewBag.Title = "Missing";
}

<h2>Missing persons</h2>

<p>
    @Html.ActionLink("Report Missing Person", "ReportMissing")
</p>
@using (Html.BeginForm("Index", "Lost", FormMethod.Get))
{
    <p>
        Find by location: @Html.TextBox("LocationString", ViewBag.CurrentFilter as string)
        <input type="submit" value="Search" />
    </p>
}
<table class="table">
    <tr>
        <th>
            First name
        </th>
        <th>
            @Html.ActionLink("Last Name", "Index", new { sortOrder = ViewBag.NameSortParm, currentFilter = ViewBag.CurrentFilter})
        </th>
        <th>
            Location last seen
        </th>
        <th>
            @Html.ActionLink("Date Last seen", "Index", new { sortOrder = ViewBag.DateLsNameParm, currentFilter = ViewBag.CurrentFilter })
        </th>
        <th>
            @Html.ActionLink("Report Date", "Index", new { sortOrder = ViewBag.DateSortParm, currentFilter = ViewBag.CurrentFilter })
        </th>
    </tr>
    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.FirstName)
            </td>
            <td>
                @Html.DisplayFor(model => item.LastName)
            </td>
            <td>
                @Html.DisplayFor(model => item.LocationLastSeen)
            </td>
            <td>
                @Html.DisplayFor(model => item.DateLastSeen)
            </td>
            <td>
                @Html.DisplayFor(model => item.ReportDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                @Html.ActionLink("Details", "Details", new { id = item.Id }) |
                @Html.ActionLink("Delete", "Delete", new { id = item.Id })
            </td>

        </tr>
    }
</table>
<br />
Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) of @Model.PageCount

@Html.PagedListPager(Model, page => Url.Action("Index", new { page, sortOrder = ViewBag.CurrentSort, currentFilter = ViewBag.CurrentFilter}))